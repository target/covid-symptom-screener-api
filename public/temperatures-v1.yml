
x-standard-responses: &standard-responses
  400:
    description: Request is invalid. See response body for details.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/error_response'
  401:
    description: Correct credentials were not provided.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/error_response'
  403:
    description: This action is forbidden.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/error_response'
  500:
    description: An internal error caused the request to fail. Contact support for help.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/error_response'

x-get-responses: &get-responses
  <<: *standard-responses
  404:
    description: The resource could not be found at this location.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/error_response'

x-post-responses: &post-responses
  <<: *standard-responses
  409:
    description: The resource conflicts with an existing resource.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/error_response'

openapi: 3.0.0
info:
  title: temperatures-v1
  description: API to collect temperatures
  version: 1.0.2
servers:
  - url: https://kelvin.test.com/v1
    description: Production
  - url: http://staging-api.example.com
    description: Staging

tags:
  - name: Organizations
    description: Creation and approval of organizations
  - name: Temperatures
    description: Ingestion and management of temperatures
  - name: Roles
    description: Management of user roles
  - name: Enumerations
    description: Retrieval of enumerations

paths:
  /organizations:
    parameters:
      - $ref: '#/components/parameters/authorization'

    get:
      tags:
        - Organizations
      summary: List organizations
      description: Return a list of organizations filtered with different criteria.
      parameters:
        -
          name: approval_status
          description: Current approval status for this organization
          in: query
          required: false
          schema:
            type: string
            enum:
              - APPLIED
              - APPROVED
              - SUSPENDED
        -
          name: name
          description: Filter on the name of the organization
          in: query
          required: false
          schema:
            type: string
        -
          name: authorization_code
          description: Filter on the auth code of the organization
          in: query
          required: false
          schema:
            type: string
        -
          name: tax_id
          description: Match the tax identification number for the org.
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/sort'

      responses:
        200:
          description: Returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization_list_response'
        <<: *standard-responses

    post:
      tags:
        - Organizations
      summary: Create an organization
      description: Creates an organization and returns it.
      parameters:
        - $ref: '#/components/parameters/authorization'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organization'
      responses:
        201:
          description: Created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization'
        <<: *post-responses

  /organizations/{organization_id}:
    parameters:
      - $ref: '#/components/parameters/authorization'
      -
        in: path
        name: organization_id
        required: true
        schema:
          type: string
        description: The user ID

    get:
      tags:
        - Organizations
      summary: Get an organization
      description: Return a specific organization
      responses:
        200:
          description: Returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization'
        <<: *get-responses

    put:
      tags:
        - Organizations
      summary: Update an organization
      description: Updates an organization and returns it.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organization'
      responses:
        200:
          description: Returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization'
        <<: *get-responses

    delete:
      tags:
        - Organizations
      summary: Create an organization
      description: Creates an organization and returns it.
      responses:
        204:
          description: Deleted successfully.
        <<: *standard-responses

  /temperatures:
    parameters:
      - $ref: '#/components/parameters/authorization'

    get:
      tags:
        - Temperatures
      summary: List temperatures
      description: Lists a set of temperatures
      parameters:
        -
          name: authorization_code
          description: Filter on the id of the organization
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/sort'
      responses:
        200:
          description: Returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/temperature_list_response'
        <<: *standard-responses

    post:
      tags:
        - Temperatures
      summary: Create a set of temperatures
      description: Creates a set of temperatures
      parameters:
        - $ref: '#/components/parameters/organization_pin'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/temperature_list'
      responses:
        201:
          description: Created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/temperature_post_response'
        <<: *post-responses

  /temperatures/{temperature_id}:
    parameters:
      - $ref: '#/components/parameters/authorization'
      -
        in: path
        name: temperature_id
        required: true
        schema:
          type: string
        description: The temperature ID

    get:
      tags:
        - Temperatures
      summary: Get a temperature
      description: Return a specific temperature
      responses:
        200:
          description: Returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/temperature'
        <<: *get-responses

    delete:
      tags:
        - Temperatures
      summary: Deletes a temperature
      description: Deletes a specific temperature
      responses:
        204:
          description: Deleted successfully.
        <<: *get-responses

  /user-roles:
    parameters:
      - $ref: '#/components/parameters/authorization'
    get:
      parameters:
        -
          in: query
          name: role
          required: false
          schema:
            type: string
          description: A role to search with
        -
          in: query
          name: email_address
          required: false
          schema:
            type: string
          description: An email associated with a user Google account to search by.
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/sort'
      tags:
        - Roles
      summary: Find user roles
      description: Find user roles by role or email address.
      responses:
        200:
          description: Returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-role-list-response'
        <<: *get-responses
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user-role'
      tags:
        - Roles
      summary: Create or update user role
      description: Create or update user role
      responses:
        201:
          description: Created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-role'
        <<: *post-responses
    delete:
      parameters:
        - in: query
          name: email_address
          required: false
          schema:
            type: string
          description: An email associated with a user Google account to delete the role for.
      tags:
        - Roles
      summary: Deletes a user role
      description: Deletes a specific user role
      responses:
        204:
          description: Deleted successfully.
        <<: *get-responses

  /user-roles/current:
    get:
      tags:
        - Roles
      summary: Find the user role of the currently authenticated user.
      description: Find the user role of the currently authenticated user.
      responses:
        200:
          description: Returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-role'
        <<: *get-responses

  /enumerations:
    parameters:
      - $ref: '#/components/parameters/authorization'
    get:
      tags:
        - Enumerations
      summary: List enumerations
      description: Lists a set of enumerations
      responses:
        200:
          description: Returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enumeration_list_response'
        <<: *standard-responses

  /enumerations/{name}:
    parameters:
      - $ref: '#/components/parameters/authorization'
    get:
      tags:
        - Enumerations
      summary: Get an enumeration
      description: Get a single enumeration
      parameters:
        -
          in: path
          name: name
          required: true
          schema:
            type: string
          description: Name of the enumeration you want to retrieve
      responses:
        200:
          description: Returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enumeration'
        <<: *get-responses
components:
  schemas:

    error_response:
      type: object
      properties:
        message:
          type: string
          description: Error message
        errors:
          type: array
          description: List of specific errors in this request
          items:
            type: string
            description: Error details

    audited_resource:
      type: object
      properties: &audit-fields
        created:
          type: string
          format: date-time
          description: Date this resource was created
          readOnly: true
        created_by:
          type: string
          description: ID of user that created this resource
          readOnly: true
        last_modified:
          type: string
          format: date-time
          description: Date this resource was last modified
          readOnly: true
        last_modified_by:
          type: string
          description: ID of last user to modify this resource
          readOnly: true

    organization:
      type: object
      properties:
        id:
          type: string
          description: Unique ID for the organization
          readOnly: true
        authorization_code:
          type: string
          description: Generated code that allows for submitting temperatures as this org.
          readOnly: true
        org_name:
          type: string
          description: Display name for the organization
        contact_name:
          type: string
          description: Name for the point of contact
        contact_email:
          type: string
          description: Email for the point of contact
        contact_job_title:
          type: string
          description: Title of this point of contact
        contact_phone:
          type: string
          description: Phone number for the point of contact.
        tax_id:
          type: string
          description: Tax identification number
        approval_status:
          type: string
          enum:
            - APPLIED
            - APPROVED
            - SUSPENDED
        sector:
          type: string
          enum:
            - EDUCATIONAL_SERVICES
            - HEALTH_CARE
            - SOCIAL_ASSISTANCE
            - OTHER_STATE_OR_LOCAL_GOVERNMENT
            - OTHER_NON_PROFIT
            - OTHER_PRIVATE_BUSINESS
        <<: *audit-fields

    organization_list_response:
      type: object
      description: List of organization objects
      properties:
        results:
          description: Organizations returned.
          type: array
          items:
            $ref: '#/components/schemas/organization'
        total:
          description: total number of matching organizations
          type: integer

    temperature:
      type: object
      description: Temperature measurement
      properties:
        id:
          type: string
          description: ID for this measurement
          readOnly: true
        organization_id:
          type: string
          description: ID for the organization taking this measurement
        temperature:
          type: number
          format: float
          description: Numeric temperature in degrees Fahrenheit
        user_id:
          type: string
          description: Identifier for the user
        latitude:
          type: number
          format: float
          description: Latitude for this measurement
        longitude:
          type: number
          format: float
          description: Longitude for this measurement
        timestamp:
          type: string
          format: date-time
          description: Timestamp when this measurement was taken
        <<: *audit-fields

    temperature_list:
      type: array
      description: List of temperature objects
      items:
        $ref: '#/components/schemas/temperature'

    temperature_post_response:
      type: object
      description: Records that were successfully created in this post request.
      properties:
        results:
          description: Temperatures returned.
          type: array
          items:
            $ref: '#/components/schemas/temperature'

    temperature_list_response:
      type: object
      description: List of temperature objects
      properties:
        results:
          description: Temperatures returned.
          type: array
          items:
            $ref: '#/components/schemas/temperature'
        total:
          description: Total matching temerature objects
          type: integer

    user-role:
      type: object
      description: The role associated with a user. Note most users will not have any role.
      properties:
        email_address:
          description: The email address associated with the users Google account.
          type: string
        role:
          type: string
          enum:
            - ADMIN

    user-role-list-response:
      type: object
      description: A list of user roles.
      properties:
        results:
          description: user-roles returned.
          type: array
          items:
            $ref: '#/components/schemas/user-role'
        total:
          description: Total matching user-role objects
          type: integer

    enumeration:
      type: object
      description: A list of values for an enumeration.
      properties:
        name:
          description: Name of the enumeration
          type: string
        values:
          description: List of values
          type: array
          items:
            description: List of string values
            type: string

    enumeration_list_response:
      type: object
      description: A list of enumerations.
      properties:
        results:
          description: enumerations returned.
          type: array
          items:
            $ref: '#/components/schemas/enumeration'
        total:
          description: Total matching enumeration objects
          type: integer

  parameters:
    authorization:
      name: Authorization
      in: header
      description: 'Authentication token in the form of a bearer token (e.g. Bearer your_token_here)'
      required: true
      schema:
        type: string

    organization_pin:
      name: x-organization-pin
      in: header
      description: Header for the organization pin that allows for creation of temperatures.
      required: true
      schema:
        type: string
    page:
      name: page
      in: query
      description: Page number
      required: false
      schema:
        type: integer
        default: 0
    size:
      name: size
      in: query
      description: Page size
      required: false
      schema:
        type: integer
        default: 20
    sort:
      name: sort
      in: query
      description: Sorts in format field_name,asc|desc ex. sort=org_name,asc?sort=contact_name,desc
      required: false
      schema:
        type: string
