plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'groovy'
	id 'codenarc'
	id 'com.avast.gradle.docker-compose' version '0.10.9'
}

group = 'com.temp.aggregation'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	codenarc 'org.codenarc:CodeNarc:1.1'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.postgresql:postgresql')
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.codehaus.groovy:groovy-all:2.5.10'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.spockframework:spock-core:2.0-M2-groovy-2.5'
	testImplementation 'org.spockframework:spock-spring:2.0-M2-groovy-2.5'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-openfeign:2.1.3.RELEASE'
}

test {
	useJUnitPlatform()
}

dockerCompose.isRequiredBy(test)
dockerCompose.isRequiredBy(bootRun)
dockerCompose {
	useComposeFiles = [rootProject.file('src/test/resources/compose/compose-test.yml').absolutePath]
	executable = '/usr/local/bin/docker-compose'
	dockerExecutable = '/usr/local/bin/docker'
}

codenarc {
	configFile rootProject.file('gradle/codenarc/codenarc.groovy')
	if (!System.getenv('GEN_CODENARC_REPORT')) {
		reportFormat = 'console'
	}
}

codenarcTest {
	configFile rootProject.file('gradle/codenarc/codenarcTest.groovy')
}
